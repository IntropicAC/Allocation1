/*allocationCreation.module.css*/

*{
  
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif;
}


.tableContainer {
  max-height: 47rem;
  height: 100vh;
  width: 100%;
  /* For Firefox */
  border: solid black 0.1rem;
  position: relative; /* Ensures the container can handle absolute positioning inside it */
  overflow: auto; /* Enables scrolling */
  /* Use the modern approach to attempt overlay scrollbars */
  overflow: overlay;
}
.draggableObsContainer {
  display: flex;
  height: 5rem;
  width: 100%;
  background-color: white;
  border-top: 0.2rem solid black;
  border-right: 0.1rem solid black;
  border-left: 0.1rem solid black;
  border-radius: 0.8rem 0.8rem 0 0;
  align-items: center;
  justify-content: center;
  display: flex;
  flex-direction: row;
  align-items: center;  /* Ensure vertical center alignment */
  gap: 10px;
  padding: 10px;
}

.draggableObsContainer > div {
  display: flex;
  align-items: center;  /* Center each child vertically */
}
.obsCells {
  justify-content: center;
  align-items: center;
  border: black solid 0.1rem;
  padding: 0.75rem 1.25rem;
  margin: 1rem;
  border-radius: 0.7rem;
  font-size: 1.72rem;
  background-color: white;
  cursor: grab;
}
.obsCells:hover{
  background-color: rgb(214, 214, 214);
}

.tableContainer::-webkit-scrollbar {
  width: 1rem; /* Width of the scrollbar */
  height: 0.7rem; /* Height for horizontal scrollbars if applicable */
}

.tableContainer::-webkit-scrollbar-track {
  background-color: transparent; /* Color of the track */
}

.tableContainer::-webkit-scrollbar-thumb {
  background-color: rgb(119, 119, 119); /* Semi-transparent thumb */
  border-radius: 5rem;
  
}

.tableContainer::-webkit-scrollbar-thumb:hover {
  background-color: rgb(72, 72, 72); /* Semi-transparent thumb on hover */
}

.allocationTable {
  width: 100%;
  border-collapse: collapse;
  font-family: Arial;
  background-color: white;
  font-size: 1.72rem;
  height: 100%;
}

.allocationTable th, .hourCell, table td {
  border: 0.1rem solid black;
  text-align: center;
  padding: 0.6rem;
  width: 12rem;
  height: 3rem;
  white-space: normal; /* Allows text to wrap */
  overflow-wrap: break-word; /* Allows the words to break and wrap */
  word-break: break-word; /* Ensures that long words will break at any character */
}

table td:not(.hourCell):hover {
  background-color: rgb(214, 214, 214);
}

/* Add these styles to your stylesheet */
.draggingCell {
  background-color: rgb(172, 172, 172); /* background for the cell being dragged */
  box-shadow: inset 0 4px 8px rgba(0, 0, 0, 0.2), /* Inner shadow for depth */
              inset 0 -3px 8px rgba(0, 0, 0, 0.2);
}

.hoveringCell {
  border: 1rem;
  box-shadow: inset 0 4px 8px rgba(0, 0, 0, 0.2), /* Inner shadow for depth */
              inset 0 -3px 8px rgba(0, 0, 0, 0.2);
}


.dragHandle {
  cursor: grab; /* Change to 'grabbing' when actually dragging */
  opacity: 0.5;
}

.cell:hover .dragHandle {
  opacity: 1; /* Make drag handle fully visible on hover */
}

.cell:hover {
  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.2); /* Highlight cell on hover */
  background-color: #f0f0f0; /* Light background color on hover */
  outline: none;
}

/* In your CSS module or stylesheet */
.editableInput { /* Ensures input occupies full cell width */
  padding: 0; /* Matches cell padding or set explicitly */
  margin: 0; /* Removes any default margin */
  font-size: inherit; /* Inherits font size from parent */
  font-family: inherit; /* Inherits font family from parent */
  box-sizing: border-box; /* Includes padding and border in height calculation */
  background-color: transparent; /* Optional: Makes input background match cell */
  text-align: center; /* Keeps text centered */
  border: none;
}

.editableInput:focus {
  outline: none; /* Remove focus outline to maintain cell appearance */
}

.AmPmToggle {
  margin-right: 5rem;
}

/* Hide everything by default when printing */
@media print {
  @page {
    size: landscape;
    margin: 10mm; 
  }

  html, body {
    height: 100%;
    overflow: hidden; 
    margin: 0;
    padding: 0;
  }

  body * {
    visibility: hidden;
  }

  /* Make the table visible */
  .allocationTable, .allocationTable * {
    visibility: visible;
  }

  .allocationTable {
    min-height: 100vh;
    
  }

  .tableContainer *{
    margin: 0;
    padding: 0;
  }
  .allocationTable, .allocationTable tr, .allocationTable td, .allocationTable th {
    font-size: 2rem;/* Alternative property for newer browsers */
    
  }

  .allocationTable td, .allocationTable th {
    word-wrap: break-word; /* Allow long words to break and wrap */ 
    white-space: normal; /* Ensure whitespace is handled normally, allowing wrapping */
  }
  .allocationTable td{
  text-overflow: ellipsis;
  max-height: 3rem;
  }
  .break {
    font-size: 13pt; /* Example: Reduce font size for printing */
  }
}

.selectedHour {
  background-color: black;
  color: white;
  font-weight: bold;
}

.affectedHour {
  background-color: #d4d4d4;
  font-weight: bold;
}

.hourCell {
  transition: background-color 0.2s ease;
  cursor: pointer;
}

.hourCell:hover {
  background-color: #f0f0f0;
}

/* Remove or comment out the selectionInfo styles since we're not using it anymore */
/*
.selectionInfo {
  background-color: #e7f3ff;
  border: 1px solid #007bff;
  padding: 10px;
  margin: 10px 0;
  border-radius: 5px;
  text-align: center;
  font-weight: bold;
  color: #0056b3;
}
*/
