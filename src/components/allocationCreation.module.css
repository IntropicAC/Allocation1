/*allocationCreation.module.css*/

*{
  
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif;
}

.tableContainer {
  max-height: 51rem;
  height: 100%;
  width: 100%;
  overflow-x: auto;
  overflow-y: hidden;
  /* For Firefox */
  border-spacing: 0;
}


.allocationTable {
  width: 100%;
  border-collapse: collapse;
  font-family: Arial;
  background-color: white;
  font-size: 1.72rem;
  height: 100%
}

.allocationTable th, .allocationTable td {
  max-width: 15rem;
  border: 0.1rem solid black;
  padding: 0.8rem;
  text-align: center;
  width: 1rem;
  height: 1.2rem;
  white-space: nowrap;
}
.allocationTable td:hover {
  background-color: #e2e2e2;
}
/* Add these styles to your stylesheet */
.draggingCell {
  background-color: rgb(172, 172, 172); /* Green background for the cell being dragged */
  box-shadow: inset 0 4px 8px rgba(0, 0, 0, 0.2), /* Inner shadow for depth */
              inset 0 -3px 8px rgba(0, 0, 0, 0.2);
  
}

.hoveringCell {
  border: 1rem;
  box-shadow: inset 0 4px 8px rgba(0, 0, 0, 0.2), /* Inner shadow for depth */
              inset 0 -3px 8px rgba(0, 0, 0, 0.2);
}


.dragHandle {
  cursor: grab; /* Change to 'grabbing' when actually dragging */
  opacity: 0.5;
}

.cell:hover .dragHandle {
  opacity: 1; /* Make drag handle fully visible on hover */
}

.cell:hover {
  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.2); /* Highlight cell on hover */
  background-color: #f0f0f0; /* Light background color on hover */
  outline: none;
}

/* In your CSS module or stylesheet */
.editableInput {
  width: 100%; /* Ensures input occupies full cell width */
  padding: 0; /* Matches cell padding or set explicitly */
  margin: 0; /* Removes any default margin */
  border: none; /* Removes border or matches cell border */
  font-size: inherit; /* Inherits font size from parent */
  font-family: inherit; /* Inherits font family from parent */
  box-sizing: border-box; /* Includes padding and border in height calculation */
  background-color: transparent; /* Optional: Makes input background match cell */
}

/* Ensures input is visually centered if vertical alignment is an issue */
.editableInput {
  display: block;
  height: 100%; /* Match cell height */
  text-align: center; /* Keeps text centered */
}

.editableInput:focus {
  outline: none; /* Remove focus outline to maintain cell appearance */
}

